version: '3'

services:
  app:
    build: ./REST-API
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - logstash
      - sql_db
      - rabbitmq

  chat_service:
    build: ./WebSocket-service
    restart: always
    ports:
      - 3001:3001

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: chat
    ports:
      - 27017:27017
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: chat
      ME_CONFIG_MONGODB_URL: mongodb://admin:chat@mongo:27017/

  sql_db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: instagram
    ports:
      - 5432:5432
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpass
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    volumes:
      - ./ELK/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./ELK/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - elasticsearch 

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    ports:
      - "5601:5601"
    